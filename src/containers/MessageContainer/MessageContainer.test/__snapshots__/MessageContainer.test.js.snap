// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MessageContainer tests should mactch the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MessageContainer
    eventName={Array []}
    handleSubmit={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2
          className="message-container-title"
        >
          AddMessage!
        </h2>,
        <form
          onSubmit={[Function]}
        >
          <input
            className="text-box"
            onChange={[Function]}
            placeholder="Text Message"
            type="text"
            value=""
          />
          <input
            className="submit-button"
            type="submit"
          />
        </form>,
        <div />,
      ],
      "className": "add-message-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "AddMessage!",
          "className": "message-container-title",
        },
        "ref": null,
        "rendered": "AddMessage!",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="text-box"
              onChange={[Function]}
              placeholder="Text Message"
              type="text"
              value=""
            />,
            <input
              className="submit-button"
              type="submit"
            />,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "text-box",
              "onChange": [Function],
              "placeholder": "Text Message",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "submit-button",
              "type": "submit",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            className="message-container-title"
          >
            AddMessage!
          </h2>,
          <form
            onSubmit={[Function]}
          >
            <input
              className="text-box"
              onChange={[Function]}
              placeholder="Text Message"
              type="text"
              value=""
            />
            <input
              className="submit-button"
              type="submit"
            />
          </form>,
          <div />,
        ],
        "className": "add-message-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "AddMessage!",
            "className": "message-container-title",
          },
          "ref": null,
          "rendered": "AddMessage!",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                className="text-box"
                onChange={[Function]}
                placeholder="Text Message"
                type="text"
                value=""
              />,
              <input
                className="submit-button"
                type="submit"
              />,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "text-box",
                "onChange": [Function],
                "placeholder": "Text Message",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "submit-button",
                "type": "submit",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
