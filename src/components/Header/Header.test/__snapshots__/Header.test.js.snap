// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <nav>
        <div
          className="header-container"
        >
          <p>
            <Link
              className="nav-links"
              replace={false}
              to="/"
            >
              Home
            </Link>
          </p>
          <p>
            <Link
              className="nav-links"
              replace={false}
              to="/message"
            >
              Message
            </Link>
          </p>
          <p>
            <Link
              className="nav-links"
              replace={false}
              to="/randomizer"
            >
              Randomizer
            </Link>
          </p>
          <p>
            <Link
              className="nav-links"
              replace={false}
              to="/map"
            >
              MapLocation
            </Link>
          </p>
        </div>
      </nav>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="header-container"
        >
          <p>
            <Link
              className="nav-links"
              replace={false}
              to="/"
            >
              Home
            </Link>
          </p>
          <p>
            <Link
              className="nav-links"
              replace={false}
              to="/message"
            >
              Message
            </Link>
          </p>
          <p>
            <Link
              className="nav-links"
              replace={false}
              to="/randomizer"
            >
              Randomizer
            </Link>
          </p>
          <p>
            <Link
              className="nav-links"
              replace={false}
              to="/map"
            >
              MapLocation
            </Link>
          </p>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p>
              <Link
                className="nav-links"
                replace={false}
                to="/"
              >
                Home
              </Link>
            </p>,
            <p>
              <Link
                className="nav-links"
                replace={false}
                to="/message"
              >
                Message
              </Link>
            </p>,
            <p>
              <Link
                className="nav-links"
                replace={false}
                to="/randomizer"
              >
                Randomizer
              </Link>
            </p>,
            <p>
              <Link
                className="nav-links"
                replace={false}
                to="/map"
              >
                MapLocation
              </Link>
            </p>,
          ],
          "className": "header-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                className="nav-links"
                replace={false}
                to="/"
              >
                Home
              </Link>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Home",
                "className": "nav-links",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Home",
              "type": [Function],
            },
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                className="nav-links"
                replace={false}
                to="/message"
              >
                Message
              </Link>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Message",
                "className": "nav-links",
                "replace": false,
                "to": "/message",
              },
              "ref": null,
              "rendered": "Message",
              "type": [Function],
            },
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                className="nav-links"
                replace={false}
                to="/randomizer"
              >
                Randomizer
              </Link>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Randomizer",
                "className": "nav-links",
                "replace": false,
                "to": "/randomizer",
              },
              "ref": null,
              "rendered": "Randomizer",
              "type": [Function],
            },
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                className="nav-links"
                replace={false}
                to="/map"
              >
                MapLocation
              </Link>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "MapLocation",
                "className": "nav-links",
                "replace": false,
                "to": "/map",
              },
              "ref": null,
              "rendered": "MapLocation",
              "type": [Function],
            },
            "type": "p",
          },
        ],
        "type": "div",
      },
      "type": "nav",
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <nav>
          <div
            className="header-container"
          >
            <p>
              <Link
                className="nav-links"
                replace={false}
                to="/"
              >
                Home
              </Link>
            </p>
            <p>
              <Link
                className="nav-links"
                replace={false}
                to="/message"
              >
                Message
              </Link>
            </p>
            <p>
              <Link
                className="nav-links"
                replace={false}
                to="/randomizer"
              >
                Randomizer
              </Link>
            </p>
            <p>
              <Link
                className="nav-links"
                replace={false}
                to="/map"
              >
                MapLocation
              </Link>
            </p>
          </div>
        </nav>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="header-container"
          >
            <p>
              <Link
                className="nav-links"
                replace={false}
                to="/"
              >
                Home
              </Link>
            </p>
            <p>
              <Link
                className="nav-links"
                replace={false}
                to="/message"
              >
                Message
              </Link>
            </p>
            <p>
              <Link
                className="nav-links"
                replace={false}
                to="/randomizer"
              >
                Randomizer
              </Link>
            </p>
            <p>
              <Link
                className="nav-links"
                replace={false}
                to="/map"
              >
                MapLocation
              </Link>
            </p>
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                <Link
                  className="nav-links"
                  replace={false}
                  to="/"
                >
                  Home
                </Link>
              </p>,
              <p>
                <Link
                  className="nav-links"
                  replace={false}
                  to="/message"
                >
                  Message
                </Link>
              </p>,
              <p>
                <Link
                  className="nav-links"
                  replace={false}
                  to="/randomizer"
                >
                  Randomizer
                </Link>
              </p>,
              <p>
                <Link
                  className="nav-links"
                  replace={false}
                  to="/map"
                >
                  MapLocation
                </Link>
              </p>,
            ],
            "className": "header-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  className="nav-links"
                  replace={false}
                  to="/"
                >
                  Home
                </Link>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Home",
                  "className": "nav-links",
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": "Home",
                "type": [Function],
              },
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  className="nav-links"
                  replace={false}
                  to="/message"
                >
                  Message
                </Link>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Message",
                  "className": "nav-links",
                  "replace": false,
                  "to": "/message",
                },
                "ref": null,
                "rendered": "Message",
                "type": [Function],
              },
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  className="nav-links"
                  replace={false}
                  to="/randomizer"
                >
                  Randomizer
                </Link>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Randomizer",
                  "className": "nav-links",
                  "replace": false,
                  "to": "/randomizer",
                },
                "ref": null,
                "rendered": "Randomizer",
                "type": [Function],
              },
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  className="nav-links"
                  replace={false}
                  to="/map"
                >
                  MapLocation
                </Link>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "MapLocation",
                  "className": "nav-links",
                  "replace": false,
                  "to": "/map",
                },
                "ref": null,
                "rendered": "MapLocation",
                "type": [Function],
              },
              "type": "p",
            },
          ],
          "type": "div",
        },
        "type": "nav",
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
